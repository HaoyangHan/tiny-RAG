[tool.poetry]
name = "rag-memo-core-lib"
version = "0.1.0"
description = "Core library for TinyRAG document processing and memo generation"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "rag_memo_core_lib", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.6.1"
pydantic-settings = "^2.1.0"
beanie = "^1.24.0"
motor = "^3.3.2"
pymongo = "^4.6.1"
llama-index = "^0.10.0"
llama-index-core = "^0.10.0"
llama-index-embeddings-openai = "^0.1.0"
llama-index-llms-openai = "^0.1.0"
llama-index-vector-stores-mongodb = "^0.1.0"
langchain = "^0.1.0"
langchain-community = "^0.0.20"
langchain-openai = "^0.0.5"
openai = "^1.12.0"
google-generativeai = "^0.3.2"
pypdf = "^4.0.1"
python-docx = "^1.1.0"
pillow = "^10.2.0"
pytesseract = "^0.3.10"
numpy = "^1.26.0"
pandas = "^2.2.0"
tiktoken = "^0.5.2"
tenacity = "^8.2.3"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.0"
pytest-mock = "^3.12.0"
black = "^24.0.0"
ruff = "^0.2.0"
mypy = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--verbose",
    "--cov=src/rag_memo_core_lib",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src/rag_memo_core_lib"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError",
]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "B", "I"]
ignore = [] 