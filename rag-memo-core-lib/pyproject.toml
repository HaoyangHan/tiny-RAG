[tool.poetry]
name = "rag-memo-core-lib"
version = "1.2.0"
description = "Core library for TinyRAG document processing and memo generation platform"
authors = ["TinyRAG Team <team@tinyrag.com>"]
readme = "README.md"
packages = [{include = "rag_memo_core_lib", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.6.1"
pydantic-settings = "^2.1.0"
beanie = "^1.24.0"
motor = "^3.3.2"
pymongo = "^4.6.1"
llama-index = "^0.10.0"
llama-index-core = "^0.10.0"
llama-index-embeddings-openai = "^0.1.0"
llama-index-llms-openai = "^0.1.0"
llama-index-vector-stores-mongodb = "^0.1.0"
langchain = "^0.1.0"
langchain-community = "^0.0.20"
langchain-openai = "^0.0.5"
openai = "^1.12.0"
google-generativeai = "^0.3.2"
pypdf = "^4.0.1"
python-docx = "^1.1.0"
pillow = "^10.2.0"
pytesseract = "^0.3.10"
numpy = "^1.26.0"
pandas = "^2.2.0"
tiktoken = "^0.5.2"
tenacity = "^8.2.3"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.12.0"
ruff = "^0.2.0"
mypy = "^1.8.0"
black = "^24.0.0"
isort = "^5.13.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/rag_memo_core_lib",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "-v"
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
] 